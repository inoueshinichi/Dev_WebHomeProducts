version: '3.7'
services:
  web_server:
    build:
      context: ./web_server
      dockerfile: Dockerfile
      args:
        - EMAIL=${EMAIL}
        - CONTAINER_WEB_DOMAIN=${CONTAINER_WEB_DOMAIN}
        - CONTAINER_APP_DOMAIN=${CONTAINER_APP_DOMAIN}
        - CONTAINER_APP_HTTP_PORT=${CONTAINER_APP_HTTP_PORT}
        - CONTAINER_WEB_HTTP_PORT=${CONTAINER_WEB_HTTP_PORT}
        - CONTAINER_WEB_HTTPS_PORT=${CONTAINER_WEB_HTTPS_PORT}
    image: ${DHUB_USER}/hp_nginx_web_srv:${WEB_SRV_IMG_VER}
    container_name: hp_nginx_web_srv_con
    environment:
      EMAIL: ${EMAIL}
      HOST_APP_HTTP_PORT: ${HOST_APP_HTTP_PORT}
      ENTRYPOINT_HOST_WEB_DOMAIN: ${ENTRYPOINT_HOST_WEB_DOMAIN}
      CONTAINER_WEB_DOMAIN: ${CONTAINER_WEB_DOMAIN}
      CONTAINER_APP_HTTP_PORT: ${CONTAINER_APP_HTTP_PORT}
      CONTAINER_APP_DOMAIN: ${CONTAINER_APP_DOMAIN}
      CONTAINER_WEB_HTTP_PORT: ${CONTAINER_WEB_HTTP_PORT}
      CONTAINER_WEB_HTTPS_PORT: ${CONTAINER_WEB_HTTPS_PORT}
      MAX_REQUEST_BODY_SIZE: ${MAX_REQUEST_BODY_SIZE}
      WSGI_UNIX_SOCKET_FILE: ${WSGI_UNIX_SOCKET_FILE}
    # restart: unless-stopped
    depends_on:
      - app_server
    ports:
      - ${HOST_WEB_HTTP_PORT}:${CONTAINER_WEB_HTTP_PORT}
      - ${HOST_WEB_HTTPS_PORT}:${CONTAINER_WEB_HTTPS_PORT}
    networks:
      - home_products_net
    volumes:
      # Binding
      # - ./web_server/html:/usr/share/nginx/html
      - ./web_server/diagnostic/nginx/nginx.conf.log:/etc/nginx/nginx.conf
      - ./web_server/diagnostic/letsencrypt:/etc/letsencrypt
      - gunicorn:${WSGI_UNIX_SOCKET_FILE}

  app_server:
    build:
      context: ./app_server
      dockerfile: Dockerfile
      args:
        - CONTAINER_APP_HTTP_PORT=${CONTAINER_APP_HTTP_PORT}
        - APP_STOPSIGNAL=${APP_STOPSIGNAL}
        - WSGI_UNIX_SOCKET_FILE=${WSGI_UNIX_SOCKET_FILE}
        - DJANGO_PROJECT_DIRECTORY=${DJANGO_PROJECT_DIRECTORY}
        - DJANGO_PROJECT_NAME=${DJANGO_PROJECT_NAME}
    image: ${DHUB_USER}/hp_app_srv:${APP_SRV_IMG_VER}
    container_name: hp_app_srv_con
    # command: /bin/sh -c "tail -f /dev/null"
    # command: python ${DJANGO_PROJECT_DIRECTORY}/${DJANGO_PROJECT_NAME}/manage.py runserver 0.0.0.0:8000
    tty: true
    environment:
      EMAIL: ${EMAIL}
      CONTAINER_WEB_DOMAIN: ${CONTAINER_WEB_DOMAIN}
      CONTAINER_APP_HTTP_PORT: ${CONTAINER_APP_HTTP_PORT}
      CONTAINER_DB_DOMAIN: ${CONTAINER_DB_DOMAIN}
      DB_POSTGRE_PORT: ${DB_POSTGRE_PORT}
      DB_POSTGRE_USER: ${DB_POSTGRE_USER}
      DB_POSTGRE_PASSWORD: ${DB_POSTGRE_PASSWORD}
      DJANGO_PROJECT_DIRECTORY: ${DJANGO_PROJECT_DIRECTORY}
      DJANGO_PROJECT_NAME: ${DJANGO_PROJECT_NAME}
      DJANGO_SETTINGS_MODULE: ${DJANGO_SETTINGS_MODULE}
      WSGI_UNIX_SOCKET_FILE: ${WSGI_UNIX_SOCKET_FILE}
    # restart: unless-stopped
    ports:
      - ${HOST_APP_HTTP_PORT}:${CONTAINER_APP_HTTP_PORT}
    networks:
      - home_products_net
    volumes:
      # Binding
      - ./app_server/src:/home_products_app
      - gunicorn:${WSGI_UNIX_SOCKET_FILE}

networks:
  home_products_net:
    driver: bridge

volumes:
  gunicorn:
    driver: local
  home_products_db:
    driver: local
      